{
    "collab_server" : "",
    "contents" : "library(jsonlite)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(stringr)\n\nDATA_SET_ID_F  = \"5149f141-b653-4e91-86f9-14e7f33e7830\"\nDATA_SET_ID_M = \"b0eeaeb2-bf54-4de6-8a0f-d2fda674284b\"\n\nAPI_KEY = readLines(\"apikey.txt\", warn = F)\n\nURL_M = paste0(\"http://api.namara.io/v0/data_sets/\", \n             DATA_SET_ID_M, \n             \"/data/en-4?api_key=\",\n             API_KEY)\n\nURL_F = paste0(\"http://api.namara.io/v0/data_sets/\", \n               DATA_SET_ID_F, \n               \"/data/en-4?api_key=\",\n               API_KEY)\n\n# Get the data from Namara, \nget_api_data <- function(URL, max = 1e06, verbose = TRUE) {\n  cat(\"\\nGrabbing data from Namara: \")\n  df <- data.frame()\n  for (i in seq(0,250*1e06, by = 250)) {\n    offset_url = paste0(URL, \"&offset=\", i)\n    tmp <- fromJSON(readLines(offset_url, warn = F))\n    if (verbose & i %% 1000 == 0) cat(\".\")\n    if (length(tmp) == 0) break\n    df <- rbind(df, tmp)\n  }\n  df\n}\n\nmale_names <- get_api_data(URL_M)\nfemale_names <- get_api_data(URL_F)\n\n\n# Build a function to get year / frequency / risk\n\nadd_freq <- function(df) {\n  df %>% \n    group_by(year) %>% \n    mutate(percents = frequency / sum(frequency)) %>% \n    arrange(name, year) %>% \n    group_by(name) %>% \n    mutate(rel_risk = percents / lag(percents, order_by = year),\n           rel_loss = 1 - rel_risk)\n}\n\nadd_feature <- function(.data, .dots = lazyeval::lazy_dots(...)) {\n  x <- filter(.data, .dots) %>% \n    group_by(year, \n  \n}\n\nmn <- add_freq(male_names) %>% \n  mutate(has_y = str_detect(name, \"Y\"),\n         ends_1 = str_sub(name, -1, -1),\n         ends_2 = str_sub(name, -2, -1),\n         ends_3 = str_sub(name, -3, -1))\n\nggplot(data=filter(mn, ends_3 == \"IAN\"), aes(year, frequency, color = '-IAN')) +\n  stat_summary(fun.y = sum, geom = \"line\") +\n  stat_summary(data=filter(mn, has_y), fun.y = sum, geom = \"line\", aes(color = 'Y')) +\n  stat_summary(data=filter(mn, ends_3 == \"SON\"), fun.y = sum, geom = \"line\", aes(color = '-SON'))\n  \n  \n\nggplot(data = mn, aes(year, frequency)) +\n  stat_summary(data=filter(mn, ends_1 == \"N\"), fun.y = sum, geom = \"line\", aes(color = 'N'))\n\n",
    "created" : 1477075388395.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1241762756",
    "id" : "2B5CAAB7",
    "lastKnownWriteTime" : 1477081450,
    "last_content_update" : 1477081450712,
    "path" : "~/R/workspace/Ontario_Baby_Names/babynames.R",
    "project_path" : "babynames.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}